name: docker

on:
  push:
    branches: ["main"]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to HSDP Docker registry
        uses: docker/login-action@v1
        with:
          registry: docker.na1.hsdp.io
          username: ${{ secrets.HSDP_DOCKER_USERNAME }}
          password: ${{ secrets.HSDP_DOCKER_PASSWORD }}
      - 
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Git information
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      -
        name: Build and push alpine
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: philipslabs/siderite:latest,docker.na1.hsdp.io/philipslabs/siderite:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Build and push debian
        id: docker_build_debian
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.debian
          build-args: |
            GIT_COMMIT=${{ steps.vars.outputs.sha_short }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: philipslabs/siderite:latest-debian,docker.na1.hsdp.io/philipslabs/siderite:latest-debian
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
